const mysql = require('mysql2/promise');
const fs = require('fs');

async function createTables() {
    let connection;
    try {
        connection = await mysql.createConnection({
            host: 'localhost',
            user: 'root',
            password: '',
            database: 'hospital_maintenance'
        });

        console.log('Conectado ao banco de dados...');

        // Criar tabela template_categories
        await connection.execute(`
            CREATE TABLE IF NOT EXISTS template_categories (
                id INT AUTO_INCREMENT PRIMARY KEY,
                name VARCHAR(100) NOT NULL UNIQUE,
                description TEXT,
                color VARCHAR(7) DEFAULT '#3B82F6',
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        `);
        console.log('Tabela template_categories criada!');

        // Criar tabela service_description_templates
        await connection.execute(`
            CREATE TABLE IF NOT EXISTS service_description_templates (
                id INT AUTO_INCREMENT PRIMARY KEY,
                title VARCHAR(200) NOT NULL,
                description TEXT NOT NULL,
                category_id INT,
                is_active BOOLEAN DEFAULT TRUE,
                usage_count INT DEFAULT 0,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
                FOREIGN KEY (category_id) REFERENCES template_categories(id) ON DELETE SET NULL
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
        `);
        console.log('Tabela service_description_templates criada!');

        // Inserir categorias
        await connection.execute(`
            INSERT IGNORE INTO template_categories (name, description, color) VALUES
            ('Manuten√ß√£o Preventiva', 'Templates para servi√ßos de manuten√ß√£o preventiva', '#10B981'),
            ('Manuten√ß√£o Corretiva', 'Templates para servi√ßos de manuten√ß√£o corretiva', '#EF4444'),
            ('Instala√ß√£o', 'Templates para servi√ßos de instala√ß√£o de equipamentos', '#8B5CF6'),
            ('Calibra√ß√£o', 'Templates para servi√ßos de calibra√ß√£o e ajustes', '#F59E0B')
        `);
        console.log('Categorias inseridas!');

        // Inserir templates
        await connection.execute(`
            INSERT IGNORE INTO service_description_templates (name, description, category_id) VALUES
            ('Manuten√ß√£o Preventiva Completa', 'Realizar limpeza geral, verifica√ß√£o de componentes, lubrifica√ß√£o e testes de funcionamento.', 1),
            ('Reparo de Equipamento Eletr√¥nico', 'Diagnosticar falha, substituir componentes defeituosos e realizar testes de valida√ß√£o.', 2),
            ('Instala√ß√£o de Equipamento M√©dico', 'Desembalar, posicionar, conectar e configurar equipamento conforme especifica√ß√µes.', 3),
            ('Calibra√ß√£o de Instrumentos', 'Ajustar par√¢metros, verificar precis√£o e emitir certificado de calibra√ß√£o.', 4),
            ('Limpeza e Desinfec√ß√£o', 'Realizar limpeza completa, desinfec√ß√£o e verifica√ß√£o de funcionamento.', 1),
            ('Substitui√ß√£o de Pe√ßas', 'Identificar pe√ßa defeituosa, substituir e testar funcionamento do equipamento.', 2),
            ('Configura√ß√£o de Software', 'Instalar, configurar e testar software espec√≠fico do equipamento.', 3),
            ('Verifica√ß√£o de Seguran√ßa', 'Testar sistemas de seguran√ßa, alarmes e dispositivos de prote√ß√£o.', 1),
            ('Atualiza√ß√£o de Software', 'Realizar backup, instalar atualiza√ß√µes de software e verificar compatibilidade.', 2),
            ('Teste de Performance', 'Executar testes de performance, verificar par√¢metros e documentar resultados.', 4)
        `);
        console.log('Templates inseridos!');

        // Adicionar coment√°rios
        await connection.execute(`ALTER TABLE template_categories COMMENT = 'Categorias para organizar templates de descri√ß√£o de servi√ßos'`);
        await connection.execute(`ALTER TABLE service_description_templates COMMENT = 'Templates pr√©-definidos para descri√ß√µes de servi√ßos de manuten√ß√£o'`);

        console.log('\n‚úÖ Tabelas de templates criadas com sucesso!');
        console.log('üìä Total de categorias: 4');
        console.log('üìù Total de templates: 10');

    } catch (error) {
        console.error('‚ùå Erro ao criar tabelas:', error.message);
        throw error;
    } finally {
        if (connection) {
            await connection.end();
        }
    }
}

createTables().catch(console.error);