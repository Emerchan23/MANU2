const mysql = require('mysql2/promise');

async function testPreferencesManual() {
    console.log('üß™ Teste manual das prefer√™ncias do sistema...\n');
    
    let connection;
    
    try {
        // Conectar ao banco
        connection = await mysql.createConnection({
            host: 'localhost',
            user: 'root',
            password: '',
            database: 'hospital_maintenance'
        });
        
        console.log('‚úÖ Conectado ao banco de dados\n');
        
        // 1. Verificar prefer√™ncias atuais
        console.log('1. üìä Verificando prefer√™ncias atuais do usu√°rio...');
        const [currentPrefs] = await connection.execute(
            'SELECT * FROM user_preferences WHERE user_id = 1'
        );
        
        if (currentPrefs.length > 0) {
            const prefs = currentPrefs[0];
            console.log('‚úÖ Prefer√™ncias encontradas:');
            console.log(`   - Tema: ${prefs.theme}`);
            console.log(`   - Idioma: ${prefs.language}`);
            console.log(`   - Itens por p√°gina: ${prefs.items_per_page}`);
            console.log(`   - Notifica√ß√µes: ${prefs.notifications_enabled ? 'Ativadas' : 'Desativadas'}`);
            console.log(`   - Fuso hor√°rio: ${prefs.timezone}`);
        } else {
            console.log('‚ö†Ô∏è Nenhuma prefer√™ncia encontrada');
        }
        
        // 2. Testar mudan√ßa de tema para 'light'
        console.log('\n2. üé® Testando mudan√ßa de tema para "light"...');
        await connection.execute(`
            INSERT INTO user_preferences (
                user_id, theme, language, notifications_enabled, 
                dashboard_layout, items_per_page, timezone,
                created_at, updated_at
            ) VALUES (1, 'light', 'pt-BR', true, 'default', 25, 'America/Sao_Paulo', NOW(), NOW())
            ON DUPLICATE KEY UPDATE 
                theme = 'light',
                updated_at = NOW()
        `);
        console.log('‚úÖ Tema alterado para "light"');
        
        // Aguardar um pouco
        await new Promise(resolve => setTimeout(resolve, 2000));
        
        // 3. Testar mudan√ßa de tema para 'dark'
        console.log('\n3. üåô Testando mudan√ßa de tema para "dark"...');
        await connection.execute(`
            UPDATE user_preferences SET 
                theme = 'dark',
                updated_at = NOW()
            WHERE user_id = 1
        `);
        console.log('‚úÖ Tema alterado para "dark"');
        
        // Aguardar um pouco
        await new Promise(resolve => setTimeout(resolve, 2000));
        
        // 4. Testar mudan√ßa de itens por p√°gina para 50
        console.log('\n4. üìÑ Testando mudan√ßa de itens por p√°gina para 50...');
        await connection.execute(`
            UPDATE user_preferences SET 
                items_per_page = 50,
                updated_at = NOW()
            WHERE user_id = 1
        `);
        console.log('‚úÖ Itens por p√°gina alterado para 50');
        
        // Aguardar um pouco
        await new Promise(resolve => setTimeout(resolve, 2000));
        
        // 5. Testar mudan√ßa de itens por p√°gina para 10
        console.log('\n5. üìã Testando mudan√ßa de itens por p√°gina para 10...');
        await connection.execute(`
            UPDATE user_preferences SET 
                items_per_page = 10,
                updated_at = NOW()
            WHERE user_id = 1
        `);
        console.log('‚úÖ Itens por p√°gina alterado para 10');
        
        // 6. Verificar prefer√™ncias finais
        console.log('\n6. üîç Verificando prefer√™ncias finais...');
        const [finalPrefs] = await connection.execute(
            'SELECT * FROM user_preferences WHERE user_id = 1'
        );
        
        if (finalPrefs.length > 0) {
            const prefs = finalPrefs[0];
            console.log('‚úÖ Prefer√™ncias finais:');
            console.log(`   - Tema: ${prefs.theme}`);
            console.log(`   - Idioma: ${prefs.language}`);
            console.log(`   - Itens por p√°gina: ${prefs.items_per_page}`);
            console.log(`   - Notifica√ß√µes: ${prefs.notifications_enabled ? 'Ativadas' : 'Desativadas'}`);
            console.log(`   - Fuso hor√°rio: ${prefs.timezone}`);
            console.log(`   - √öltima atualiza√ß√£o: ${prefs.updated_at}`);
        }
        
        console.log('\nüéâ TESTE MANUAL CONCLU√çDO!');
        console.log('\nüìã INSTRU√á√ïES PARA TESTE NO NAVEGADOR:');
        console.log('1. Abra http://localhost:3000');
        console.log('2. Clique no bot√£o "SAIR" no canto superior direito');
        console.log('3. Navegue para http://localhost:3000/perfil');
        console.log('4. Clique na aba "Prefer√™ncias"');
        console.log('5. Teste alterar o tema entre Claro/Escuro/Sistema');
        console.log('6. Teste alterar itens por p√°gina entre 10/25/50/100');
        console.log('7. Clique em "Salvar Prefer√™ncias"');
        console.log('8. Verifique se as mudan√ßas s√£o aplicadas imediatamente');
        console.log('\nüîß Se n√£o funcionar, verifique:');
        console.log('- Se o contexto UserPreferencesProvider est√° sendo usado');
        console.log('- Se a API /api/profile est√° respondendo corretamente');
        console.log('- Se o useTheme est√° aplicando o tema');
        console.log('- Se as listagens est√£o usando preferences.itemsPerPage');
        
    } catch (error) {
        console.error('‚ùå Erro no teste:', error.message);
        console.error('Stack:', error.stack);
    } finally {
        if (connection) {
            await connection.end();
        }
    }
}

testPreferencesManual().catch(console.error);